== Getting started == 



=== Using the standalone version of _Onotoa_ ===


After downloading the file zip file for your system and unzipping it you should have
a *onotoa* folder. This includes a binary file (e.g. onotoa.exe for Windows(TM) or Onotoa.app on MacOS(TM)).

After starting _Onotoa_ you should see the main window, like in Figure <<empty_win,1>>.

.Empty _Onotoa_ window
[caption="Figure 1:"]
[[empty_win]]
image::images/emptywin.png["Empty _Onotoa_ window"]


To create a new model, use the *File->New..*.
Choose the path of the file and name it *example.ono*. After that your window should look like Figure <<emptyfile_win,2>>

.Onotoa window after creating a file
[caption="Figure 2:"]
[[emptyfile_win]]
image::images/emptyfilewin.png["_Onotoa_ window after creating a file"]

=== Using the plugin version of _Onotoa_ ===

After installing the needed _Onotoa_ features, create a new file. Use the context menu entry *New*, choose *Other* and select 
*New Onotoa File* in the category *Onotoa*. 

NOTE: You need a project, where you create the file. The nature of the project doesn't matter.

After creating the new file _Onotoa_ switches to the *Onotoa Perpective*. This should look like Figure <<nonrcp_win,3>>.

._Onotoa_ window after creating a file in Navigator
[caption="Figure 3:"]
[[nonrcp_win]]
image::images/emptyfilewin_nonrcp.png["_Onotoa_ window after creating a file in Navigator"]

=== Creating the first diagram ===

With _Onotoa_ it is possible to create multiple diagrams for a Topic Maps schemas. Although it is possible to create the schema using wizards provided
by the *Model View* it is advised to create the schema using the diagrams.

Vie the context menu of the 'Diagrams' node in the *Model View* a new diagram can be created. After selecting *New Diagram* a dialog asks for the name of the
diagram. This name should be unique inside one schema definition. After pressing okay, the diagram is added to the 'Diagrams' node and an editor opens where the
diagram can be edited.

At the right side of the editir is a sidebar. This sidebar is called a palette and contains the tools to create new diagram elements (see Figure <<palette, 4>>).

.Palette of a diagram editor
[caption="Figure 4:"]
[[palette]]
image::images/palette.png["Palette of a diagram editor", width="5cm", align="center"]

The following table lists the elements and a short description of their functionality.

.Name and Functions of Palette Tools
|===========================
|Select|Tool for selecting diagram elements
|Marquee| Selection tool for multiple diagram elements
|Comment| Creates a non-TMCL comment in the diagram 
||
|Topic| Creates a topic element in the diagram
|Topic Type| Creates a topic type element in the diagram
|Occurrence Type| Creates an occurrence type element
|Role Type| Creates a role type element
|Association Type| Creates an association type element in the diagram
|Name Type| Creates a name type element in the diagram
||
|Occurrence Constraint| Creates an occurrence constraint element to an topic type element.
|Name Constraint| Creates a name constraint element to an topic type element.
|Scope Constraint| Creates a scope constraint element to an name, occurrence or association constraint element. This is only possible if the parent constraint does not use a default type. 
|Reifier Constraint| Creates a reifier constraint element to an name, occurrence or association constraint element. Again this is only possible if the parent constraint does not use a default type. 
|Subject Identifier Constraint| Creates a subject identifier constraint element to an topic type element.
|Subject Locator Constraint| Creates a subject locator constraint element to an topic type element.
|Is A...|Creates a connection between two topic types, which represents a type instance relationship.
|Kind Of...|Creates a connection betweeen two topic types, which represents a kind of relationship.
|Association Constraint|Creates an element representing an association constraint in the diagram. This is used as connection point between topic types which are in an relationship.
|Topic Role Contraint|The connection between a topic type (the player) an an association constraint (the association). 
|===========================

Two add a new element to the diagram just drag an palette entry into the position in the diagram.

NOTE: Not every element is a diagram element. For example, to create a new occurrence constraint you need an existing topic type and drop the palette entry in
this topic type.

TIP: Instead of Drag and Drop elements of the palette, it is possible to click on them and click on the target point in the diagramm. A new element 
is created after the second click.

Now you should be able to create some topic types and set them in a type-instance relationship.

The following section will explain how to edit the properties of a topic type.

 