<project basedir="." name="Onotoa Documentation" default="html">

	<property name="filename" value="doc" />
	<property name="src" value="src/main.txt" />
	<property name="doc" value="doc" />
	<property name="doc.html" value="${doc}/html" />
	<property name="doc.pdf" value="${doc}/pdf" />
	<property name="doc.docbook" value="${doc}/docbook" />


	<!--
	      - Configure basic properties that will be used in the file.
	      -->
	<!-- libs-->
	<property name="docbook.xsl.dir" value="lib/docbook-xsl-1.75.2" />
	<property name="html.stylesheet" value="${docbook.xsl.dir}/html/docbook.xsl" />
	<property name="fo.stylesheet" value="${docbook.xsl.dir}/fo/docbook.xsl" />
	<property name="xalan.lib.dir" value="lib/" />

	<property name="src.dir" value="src" />
	<property name="src.dir.images" value="${src.dir}/images" />

	<property name="doc.docbook.html" value="${doc.docbook}/html" />
	<property name="doc.docbook.html.images" value="${doc.docbook.html}/images" />
	<property name="doc.docbook.latex" value="${doc.docbook}/latex" />
	<property name="doc.docbook.html.images" value="${doc.docbook.html}/images" />
	<property name="doc.docbook.pdf" value="${doc.docbook}/pdf" />

	<property name="build" value="build" />
	<property name="build.fo" value="${build}/fo" />

	<property name="paper.type" value="A4" />

	<!--
	      - Sets up the classpath for the Xalan and Xerces implementations
	      - that are to be used in this script, since the versions that ship
	      - with Ant may be out of date.
	      -->
	<path id="xalan.classpath">
		<fileset dir="${xalan.lib.dir}" id="xalan.fileset">
			<include name="xalan.jar" />
			<include name="xercesImpl.jar" />
		</fileset>
	</path>

	<target name="all" depends="build-html,build-pdf">
	</target>

	<!--
	      - target:  usage
	      -->
	<target name="usage" description="Prints the Ant build.xml usage">
		<echo message="Use -projecthelp to get a list of the available targets." />
	</target>

	<!--
	      - target:  clean
	      -->
	<target name="clean" description="Cleans up generated files.">
		<delete dir="${doc}" />
		<delete dir="${build}" />
	</target>

	<target name="clean.html" description="Cleans up generated files.">
		<delete dir="${doc.dir.html}" />
	</target>

	<target name="clean.pdf" description="Cleans up generated files.">
		<delete dir="${doc.dir.pdf}" />
		<delete dir="${build.fo}" />
	</target>
	<!--
	      - target:  depends
	      -->
	<target name="depends">
		<mkdir dir="${doc.docbook}" />
		<mkdir dir="${doc.docbook.html}" />
		<mkdir dir="${doc.docbook.html.images}" />
		<mkdir dir="${doc.docbook.latex}" />
		<mkdir dir="${doc.docbook.pdf}" />
		<mkdir dir="${build.fo}" />
	</target>

	<!--
	      - target:  build-html
	      - description:  Iterates through a directory and transforms
	      -     .xml files into .html files using the DocBook XSL.
	      -->
	<target name="build-html" depends="clean.html, depends" description="Generates HTML files from DocBook XML">
		<xslt style="${html.stylesheet}" extension=".html" basedir="${doc.docbook}" destdir="${doc.docbook.html}">
			<classpath refid="xalan.classpath" />
			<include name="${filename}.xml" />
			<param name="html.stylesheet.type" expression="text/css" />
			<param name="html.stylesheet" expression="css/onotoa.css" />
		</xslt>

		<copy todir="${doc.docbook.html}">
			<fileset dir="${src.dir}">
				<include name="css/*" />
			</fileset>
		</copy>
		<copy todir="${doc.docbook.html}">
			<fileset dir="${src.dir}">
				<include name="images/*" />
			</fileset>
		</copy>
	</target>
	<target name="build-pdf" depends="clean.pdf,depends, docbook" description="Generate PDF file from docbook XML">
		<property name="fop.home" value="lib/fop-0.95" />

		<xslt style="${fo.stylesheet}" extension=".fo" basedir="${doc.docbook}" destdir="${build.fo}">
			<param name="paper.type" expression="${paper.type}" />
			<classpath refid="xalan.classpath" />
			<include name="${filename}.xml" />
			<!-- <param name="default.image.width" expression="8cm" />-->
		</xslt>

		<taskdef name="fop" classname="org.apache.fop.tools.anttasks.Fop">
			<classpath>
				<fileset dir="${fop.home}/lib">
					<include name="*.jar" />
				</fileset>
				<fileset dir="${fop.home}/build">
					<include name="fop.jar" />
					<include name="fop-hyph.jar" />
				</fileset>
			</classpath>
		</taskdef>

		<fop format="application/pdf" basedir="${doc.docbook}" fofile="${build.fo}/${filename}.fo" outfile="${doc.docbook.pdf}/${filename}.pdf" />
	</target>

	<target name="init">
		<mkdir dir="${doc}" />
		<mkdir dir="${doc.html}" />
		<mkdir dir="${doc.pdf}" />
		<mkdir dir="${doc.docbook}" />
	</target>

	<target name="html" depends="init">
		<exec executable="asciidoc">
			<arg value="-v" />
			<arg value="-d" />
			<arg value="book" />
			<arg value="-b" />
			<arg value="xhtml11" />
			<arg value="-o" />
			<arg value="${doc.html}/${filename}.html" />
			<arg value="${src}" />
		</exec>

		<copy todir="${doc.html}">
			<fileset dir="src">
				<include name="images/*" />
			</fileset>
		</copy>
	</target>

	<target name="docbook" depends="init">
		<exec executable="asciidoc">
			<arg value="-v" />
			<arg value="-d" />
			<arg value="book" />
			<arg value="-b" />
			<arg value="docbook" />
			<arg value="-o" />
			<arg value="${doc.docbook}/${filename}.xml" />
			<arg value="${src}" />
		</exec>

		<copy todir="${doc.docbook}">
			<fileset dir="src">
				<include name="images/*" />
			</fileset>
		</copy>
	</target>
	<target name="pdf" depends="init">
		<exec executable="a2x">
			<arg value="-f" />
			<arg value="pdf" />
			<arg value="--fop" />
			<arg value="-d" />
			<arg value="book" />
			<arg value="${src}" />
		</exec>

		<copy todir="${doc.pdf}">
			<fileset dir="${src.dir}">
				<include name="*pdf" />
			</fileset>
		</copy>

		<delete>
			<fileset dir="${src.dir}">
				<include name="*pdf" />
				<include name="*xml" />
			</fileset>
		</delete>
	</target>
</project>